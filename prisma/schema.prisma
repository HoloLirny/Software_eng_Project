generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id             Int             @id @default(autoincrement())
  user_name      String
  email          String          @unique(map: "User_email_key")
  password       String
  user_role      user_user_role? @default(TEACHER)
  uploaded_files file[]
  user_courses   user_course[]
}

model user_course {
  id        Int    @id @default(autoincrement())
  user_id   Int
  course_id String
  course    course @relation(fields: [course_id], references: [id], onDelete: Cascade)
  user      user   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@index([course_id])
}

model student {
  id              String           @id
  faculty         String           @db.VarChar(255)
  student_name    String           @db.VarChar(255)
  attendances     attendance[]
  course_students course_student[]
}

model course_student {
  id         Int     @id @default(autoincrement())
  course_id  String
  student_id String
  course     course  @relation(fields: [course_id], references: [id], onDelete: Cascade)
  student    student @relation(fields: [student_id], references: [id], onDelete: Cascade)

  @@index([course_id])
  @@index([student_id])
}

model course {
  id              String           @id
  course_name     String           @db.VarChar(255)
  total_student   Int?
  scan_time       Int?
  teacher_id      Int
  attendances     attendance[]
  course_students course_student[]
  files           file[]
  user_courses    user_course[]
}

model file {
  id          Int      @id @default(autoincrement())
  course_id   String
  file_name   String   @db.VarChar(255)
  file_url    String   @db.VarChar(255)
  uploaded_by Int
  upload_at   DateTime @default(now())
  course      course   @relation(fields: [course_id], references: [id], onDelete: Cascade)
  teacher     user     @relation(fields: [uploaded_by], references: [id], onDelete: Cascade)

  @@index([course_id])
  @@index([uploaded_by])
}

model attendance {
  id         Int       @id @default(autoincrement())
  student_id String
  course_id  String
  date       DateTime?
  time       DateTime?
  course     course    @relation(fields: [course_id], references: [id], onDelete: Cascade)
  student    student   @relation(fields: [student_id], references: [id], onDelete: Cascade)

  @@index([course_id])
  @@index([student_id])
}

enum user_user_role {
  ADMIN
  TEACHER
  TA
  STUDENT
}
