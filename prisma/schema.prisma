generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int             @id @default(autoincrement())
  user_name String
  email     String          @unique(map: "User_email_key")
  phone     String          @unique(map: "User_phone_key")
  password  String
  user_role user_user_role? @default(TEACHER)
  courses   course[]
}

model student {
  id           Int    @id
  faculty      String @db.VarChar(255)
  student_name String @db.VarChar(255)
  course_students course_student[] // One-to-many relationship with course_student
  attendances     attendance[]      // One-to-many relationship with attendance
}

model course_student {
  id           Int     @id @default(autoincrement())
  course_id    Int
  student_id   Int
  course       course  @relation(fields: [course_id], references: [id]) // Foreign key to course
  student      student @relation(fields: [student_id], references: [id]) // Foreign key to student
}

model course {
  id            Int       @id
  course_name   String    @db.VarChar(255)
  teacher_id    Int
  total_student Int
  scan_time     DateTime?
  teacher       user      @relation(fields: [teacher_id], references: [id])
  course_students course_student[] // One-to-many relationship with course_student
  attendances     attendance[]      // One-to-many relationship with attendance

  @@index([teacher_id], map: "course_teacher_id_fkey")
}

model attendance {
  id         Int       @id @default(autoincrement())
  student_id Int
  course_id  Int
  date       DateTime  // Date of the attendance
  time       DateTime  // Specific time of attendance
  status     attendance_status @default(PRESENT) // Enum for attendance status
  
  student    student   @relation(fields: [student_id], references: [id]) // Foreign key to student
  course     course    @relation(fields: [course_id], references: [id]) // Foreign key to course
}

enum attendance_status {
  PRESENT
  ABSENT
  LATE
  EXCUSED
}

enum user_user_role {
  ADMIN
  TEACHER
  TA
}
