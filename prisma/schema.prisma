generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int             @id @default(autoincrement())
  user_name String
  email     String          @unique(map: "User_email_key")
  password  String
  user_role user_user_role? @default(TEACHER)
  user_courses user_course[]
}


model user_course {
  id        Int   @id @default(autoincrement())
  user_id   Int
  course_id Int
  user      user   @relation(fields: [user_id], references: [id])
  course    course @relation(fields: [course_id], references: [id])

  @@index([user_id])
  @@index([course_id])
}

model student {
  id              Int              @id
  faculty         String           @db.VarChar(255)
  student_name    String           @db.VarChar(255)
  attendances     attendance[]
  course_students course_student[]
}

model course_student {
  id         Int     @id @default(autoincrement())
  course_id  Int
  student_id Int
  course     course  @relation(fields: [course_id], references: [id])
  student    student @relation(fields: [student_id], references: [id])

  @@index([course_id])
  @@index([student_id])
}

model course {
  id              Int              @id
  course_name     String           @db.VarChar(255)
  teacher_id      Int
  total_student   Int?
  scan_time       DateTime?
  attendances     attendance[]
  user_courses    user_course[]
  course_students course_student[]
}

model attendance {
  id         Int               @id @default(autoincrement())
  student_id Int
  course_id  Int
  date       DateTime?
  time       DateTime?
  status     attendance_status @default(PRESENT)
  course     course            @relation(fields: [course_id], references: [id])
  student    student           @relation(fields: [student_id], references: [id])

  @@index([course_id])
  @@index([student_id])
}

enum attendance_status {
  PRESENT
  ABSENT
  LATE
}

enum user_user_role {
  ADMIN
  TEACHER
  TA
}
